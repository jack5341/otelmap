version: "3"

services:
  otelcollector:
    image: otel/opentelemetry-collector-contrib:0.114.0
    container_name: otel
    command:
      - "--config=/etc/otel-collector-config.yml"
      - "--set=service.telemetry.logs.level=INFO"
    volumes:
      - ./otel-config.yml:/etc/otel-collector-config.yml
    ports:
      - "4317:4317" # otlp receiver
      - "4318:4318" # otlp http receiver
      - "13133:13133" # health_check extension
    depends_on:
      clickhouse:
        condition: service_healthy
    networks:
      - otel-clickhouse
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.otel-http.rule=(Host(`trace.otelmap.com`)) && PathPrefix(`/v1`)"
      - "traefik.http.routers.otel-http.entrypoints=web"
      - "traefik.http.routers.otel-http.service=otel-http"
      - "traefik.http.services.otel-http.loadbalancer.server.port=4318"
      - "traefik.http.routers.otel-grpc.rule=(Host(`trace.otelmap.com`)) && PathPrefix(`/opentelemetry.proto`)"
      - "traefik.http.routers.otel-grpc.entrypoints=web"
      - "traefik.http.routers.otel-grpc.service=otel-grpc"
      - "traefik.http.services.otel-grpc.loadbalancer.server.port=4317"
      - "traefik.http.services.otel-grpc.loadbalancer.server.scheme=h2c"

  clickhouse:
    image: clickhouse/clickhouse-server:25.9
    ports:
      - "9000:9000"
      - "8123:8123"
    healthcheck:
      test:
        ["CMD", "bash", "-lc", "clickhouse-client --query 'SELECT 1' || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 20
    env_file:
      - path: ".env.production"
        required: true
    networks:
      - otel-clickhouse
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./sql:/docker-entrypoint-initdb.d

  server:
    image: otelmap.registry.dockreg.com/server:latest
    ports:
      - "8000:8000"
    networks:
      - otel-clickhouse
      - traefik
    depends_on:
      clickhouse:
        condition: service_healthy
    env_file:
      - path: ".env.production"
        required: true
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.server.rule=Host(`api.otelmap.com`)"
      - "traefik.http.routers.server.entrypoints=web"
      - "traefik.http.services.server.loadbalancer.server.port=8000"

  traefik:
    image: traefik:v3.1
    container_name: traefik
    restart: unless-stopped
    command:
      - "--configFile=/traefik.yaml"
    ports:
      - 443:443
      - 80:80
    networks:
      - traefik
    volumes:
      - ./traefik-config.yml:/traefik.yaml
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/letsencrypt
    labels:
      - "traefik.enable=false"

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN}
    networks:
      - traefik
    env_file:
      - path: ".env.production"
        required: true
    depends_on:
      - traefik
      - otelcollector
      - server
      - clickhouse

volumes:
  clickhouse_data:
  certs:

networks:
  otel-clickhouse:
    driver: bridge
    internal: true
  traefik:
    external: true
    name: traefik
